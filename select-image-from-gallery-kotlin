//SANI: Create a button and on button click open file browsing
// layout.xml
<Button
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:layout_width="wrap_content"
                android:text="Select File"
                android:id="@+id/file_upload"
                />
            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/selected_file"
                />
                
//SANI: In fragment kotlin file declare variables
companion object {
        /**
         * Use this factory method to create a new instance of
         * this fragment using the provided parameters.
         *
         * @param param1 Parameter 1.
         * @param param2 Parameter 2.
         * @return A new instance of fragment ContactusFragment.
         */

        private val REQUEST_TAKE_PHOTO = 0
        private val REQUEST_SELECT_IMAGE_IN_ALBUM = 1
        private val REQUEST_IMAGE_CAPTURE = 0
        }
        
///////////////////////// FILE UPLOAD /////////////////////////

        val file_upload: Button =  view.findViewById(R.id.file_upload)
        file_upload.setOnClickListener {
            selectImageFromGallery()
        }
///////////////////////////////////////////////////////////////   

///////////////////SANI: File upload from gallery ////////////////////////
    fun selectImageFromGallery() {
        val intent = Intent(Intent.ACTION_GET_CONTENT)
        intent.type = "image/*"
        if (intent.resolveActivity(getActivity()!!.getPackageManager()) != null) {
            //startActivityForResult(intent, REQUEST_SELECT_IMAGE_IN_ALBUM)
            startActivityForResult(intent, REQUEST_SELECT_IMAGE_IN_ALBUM);
        }
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)

        val image_view: ImageView =  view!!.findViewById(R.id.selected_file)
        if (requestCode == REQUEST_SELECT_IMAGE_IN_ALBUM && resultCode == RESULT_OK) {
            val imageUri = data!!.data
            image_view.setImageURI(imageUri)

        }
    }
