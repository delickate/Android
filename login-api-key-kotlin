package com.checklayout.delickate_office.practice

import android.annotation.TargetApi
import android.content.Context
import android.content.Intent
import android.os.AsyncTask
import android.os.Build
import android.support.v7.app.AppCompatActivity
import android.os.Bundle
import android.support.annotation.RequiresApi
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import com.checklayout.delickate_office.practice.R.id.message


import org.w3c.dom.Text
import java.io.*

import java.net.HttpURLConnection
import java.net.URL
import java.net.URLEncoder
import java.nio.charset.StandardCharsets
import java.util.concurrent.Executors
import org.json.JSONObject


import java.nio.charset.Charset

class MainActivity : AppCompatActivity() {

    val CONNECTON_TIMEOUT_MILLISECONDS = 60000


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        val clickButton = findViewById<View>(R.id.btnlogin) as Button



        clickButton.setOnClickListener(){

            val txb_username = findViewById<View>(R.id.txbusername) as EditText
            val txb_password = findViewById<View>(R.id.txbpassword) as EditText

            var username = txb_username.text
            var password = txb_password.text

            verify_login(username.toString(), password.toString())

          // Toast.makeText(this@MainActivity, response.toString(), Toast.LENGTH_SHORT).show();
        }

    }

    public fun verify_login(username:String, password:String): String
    {

        val json = JSONObject()
        json.put("username", username)
        json.put("password", password)

        var query_string = "username="+username+"&password="+password

        var livevar = "http://www.go4smart.com/Api/login"
        //var livevar = "http://localhost:99/Codeigniter/go4smart/Api/login"

        val error_message = findViewById<View>(R.id.errormessage) as TextView

        HttpTask( {

            if (it == null) {
               // println("connection error")
                return@HttpTask
            }
            Log.v("response", it)


            var json = JSONObject(it)
            val getstatus = json.get("status")

            if(getstatus == "error")
            {
                var getmessage = json.get("data")

                error_message.text = getmessage.toString()
            }else{
            error_message.text = "Success"
            startActivity(Intent(this@MainActivity,dashboardActivity::class.java))
            }

        } ).execute("POST", livevar, query_string.toString())
        return ""


    }

    class HttpTask(callback: (String?) -> Unit) : AsyncTask<String, Unit, String>()  {

        var callback = callback

        override fun doInBackground(vararg params: String): String? {
            val boundary: String
            boundary = "===" + System.currentTimeMillis() + "===";

            val url = URL(params[1])
            val httpClient = url.openConnection() as HttpURLConnection
            httpClient.setReadTimeout(60000)
            httpClient.setConnectTimeout(60000)
            httpClient.requestMethod = params[0]

            if (params[0] == "POST") {
                httpClient.instanceFollowRedirects = false
                httpClient.doOutput = true
                httpClient.doInput = true
                httpClient.useCaches = false

                httpClient.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                httpClient.setRequestProperty("charset", "utf-8");
                httpClient.setRequestProperty("SANI-API-KEY", "200ceb26807d6bf99fd6f4f0d1ca54d4");
                //httpClient.setRequestProperty("Content-Length", Integer.toString(params.getBytes().length));
            }
            try {
                if (params[0] == "POST") {
                    httpClient.connect()
                    val os = httpClient.getOutputStream()
                    val writer = BufferedWriter(OutputStreamWriter(os, "UTF-8"))
                    writer.write(params[2])
                    writer.flush()
                    writer.close()
                    os.close()
                }
                if (httpClient.responseCode == HttpURLConnection.HTTP_OK) {
                    val stream = BufferedInputStream(httpClient.inputStream)
                    val data: String = readStream(inputStream = stream)
                    //Log.v("response", data)
                   // val error_message = findViewById<View>(R.id.errormessage) as TextView
                    //////////////////////////////////////////////////
                    //var json = JSONObject(data)
                    //Log.v("response", json.toString())
                    //val getstatus = json.get("status")

                    //Log.v("response", getstatus.toString())

                    //if(getstatus == "error")
                    //{
                    //    var getmessage = json.get("data")
                        //error_message.text = getmessage.toString()
                    //}else{
                        //error_message.text = "Success"
                        //startActivity(Intent(this@MainActivity,dashboardActivity::class.java))
                    //}
                    //////////////////////////////////////////////////
                    return data
                } else {
                   return ""
                    //println("ERROR ${httpClient.responseCode}")
                }
            } catch (e: Exception) {
                e.printStackTrace()
            } finally {
                httpClient.disconnect()
            }

            return null
        }

        fun readStream(inputStream: BufferedInputStream): String {
            val bufferedReader = BufferedReader(InputStreamReader(inputStream))
            val stringBuilder = StringBuilder()
            bufferedReader.forEachLine { stringBuilder.append(it) }
            return stringBuilder.toString()
        }

        override fun onPostExecute(result: String?) {
            super.onPostExecute(result)
            callback(result)
        }
    }

    companion object {
        val TAG = "MainActivity"
    }



}


//////////////////////// XML FILE /////////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@mipmap/back"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="20dp"
    >

    <ImageView
        android:layout_width="90dp"
        android:layout_height="wrap_content"
        android:src="@mipmap/login"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/errormessage"

        />

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:padding="15dp"
        android:background="@drawable/shapeemail"
        android:drawableLeft="@drawable/ic_person_black_24dp"
        android:drawablePadding="10dp"
        android:hint="Email"
        android:id="@+id/txbusername"
        android:textColor="@color/white"
        android:textColorHint="@color/white"
        android:textColorHighlight="@color/white"/>

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:padding="15dp"
        android:background="@drawable/shapeemail"
        android:drawableLeft="@drawable/ic_lock_black_24dp"
        android:drawablePadding="10dp"
        android:hint="Password"
        android:id="@+id/txbpassword"
        android:textColor="@color/white"
        android:textColorHint="@color/white"
        android:inputType="textPassword"
        android:textColorHighlight="@color/white"/>
<!--
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <CheckBox
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Remember Me"
            android:layout_marginRight="10dp"
            android:layout_marginLeft="10dp"
            android:layout_marginBottom="10dp"
            android:layout_marginTop="0dp"
            android:textColor="@color/white"
            android:buttonTint="@color/white"
            android:checked="true"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Forget Password"
            android:layout_marginRight="10dp"
            android:layout_marginLeft="10dp"
            android:layout_marginBottom="10dp"
            android:layout_marginTop="0dp"
            android:textColor="@color/white"
            android:drawableLeft="@drawable/ic_lock_open_black_24dp"
            android:drawablePadding="6dp"
            android:padding="4dp"/>


    </LinearLayout>
-->
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Log In"
        android:shadowColor="@android:color/transparent"
        android:padding="15dp"
        android:layout_marginRight="10dp"
        android:layout_marginLeft="10dp"
        android:layout_marginBottom="10dp"
        android:layout_marginTop="0dp"
        android:id="@+id/btnlogin"
        android:background="@drawable/shapelogin"/>
<!--
    <Button
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Sign Up"
        android:shadowColor="@android:color/transparent"
        android:padding="15dp"
        android:layout_marginRight="10dp"
        android:layout_marginLeft="10dp"
        android:layout_marginBottom="10dp"
        android:layout_marginTop="0dp"
        android:background="@drawable/shapesignup"
        android:textColor="@color/white"/>
-->


</LinearLayout>
